package phase

import (
	"strings"
	"testing"

	"github.com/k0sproject/dig"
	"github.com/k0sproject/k0sctl/pkg/apis/k0sctl.k0sproject.io/v1beta1"
	"github.com/k0sproject/k0sctl/pkg/apis/k0sctl.k0sproject.io/v1beta1/cluster"
	"github.com/k0sproject/rig"
	"github.com/stretchr/testify/require"
	"k8s.io/client-go/tools/clientcmd"
)

func fakeReader(h *cluster.Host) (string, error) {
	return strings.ReplaceAll(`apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBRENDQWVpZ0F3SUJBZ0lVVDh1ejlwZ0kwdTMrZHJpbm1YKzJyejc5VnNJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNekF5TWpNeE16SXhNREJhRncwegpNekF5TWpBeE16SXhNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURXaGNndUxVMzFoMDAveTdSVis3d1dFZjB6OElhWUxtK00KTXBaeUh5RnQ0UHFKeEluT2h4a3paKzV1d2VvL1hMWDdWZlFJUFdIUng0bGluMkVTY0FaeWR4Qyt3UFZJenEzeQpWbnEvS0lLRFFJb2tFWHNKOUFpWUFLTkdWNXlBWHllQVNRTFZwK2RPMXAxd2d5OFlhTmJRK3RvZ3BTTzZFcjlNClJWMzVpbFNQazJ5Rm1saVhXblU4UUVJTkwya2FhRUdvdzhpOXBkc3p1RGdLbStLNEJGOExkTklIK2VvMklESGIKS1Rpa25vaDc5dEtOMGhWcUs0Q2srSTdLRy8xUDA5WUIxS2lxcVpCQ1FHNW9Zby96ZVYycXFsaFc5YjUzL2JQRwo5S0lFa2NLWTRTbjgzTHp4KzRKR1NBUUVQaTdrSTRnM3k4c1o5M3FGUm95cXdPcW9DeStkQWdNQkFBR2pRakJBCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUTE9sZ2gKOUV2amZ4VjhoLytpQ0ErWkluakFyVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYTVOanZpbjZYZVdBZDc0Qwp1aTQrSy9nQ0x4VVNSeUpySUdzdUU2L29lYjVCaEU4T1liYUwxT1N2c1dtQnc1UnE0RmQzL2VBRXlBRFdXMisrCjhMckE2T1lOV243ZjZVbmpnRjhSTS9HdzNRUVhtb3doUGFvaytjVHc3RFV5SlBHZDlNcTZ6Q05ROFFPY1A5T1IKNWRrci81N1ZhVTlkU2gwdjVLWnRWNWJWVFBtSnhGVFVHMVlaRy9sUG44ZGFxVGUyTGt5Wk1pV2xFb3NUTVlOZQpVRlE2QU1scEtqVklVN2tQaWJQRVUxcGlXcnUrU3ZwY2pPSmNTci92UmUvcGhaWlFBZDREeVF1YXpZNVoyMUl3CnJ3S2JPazNmaFVLL3NWT1ZhWHlnNHpzQUVaTndTbWczSExtNy9uOGlOSmNXZEFQWjJ1K3ZFYXV2b0taM3JSdjcKY0xwWnZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://localhost:6443
  name: local
contexts:
- context:
    cluster: local
    user: user
  name: Default
current-context: Default
kind: Config
preferences: {}
users:
- name: user
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lVSmZmUkd4ZlduaUpSazMxVXhDVnNPMmc0M0hBd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNekF5TWpNeE16SXhNREJhRncweQpOREF5TWpNeE16SXhNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXJ5OEN4bGdEamxSWi9majNSVTM1TVlsK3VqSVpZWjFqTDNtS01RR2NXSGF0R05ycG51TlpJWWszSzZxeApLVXd2SFdGQi90MklZNDhWR2pvUmpabDB1QnpXRHdPcnI5d2NzMlpsKzZrcSsvNVRpR1RWMk9DTXgzQ29wR2s1CjBEZGNYRWxhR0NyTllrWHFyb3ZQSmQyclQ3UjkweUYzM1dTTU5EZmNoemtEMjZNUUpWQmdaQ3gva2JZRDlBZzUKb245VW9Qamw0YXNoMDVxZE9HVUF4cjVoeFRLb0ZqNG90Y0hLeTAxMkY4a3h1aTAveGlid0ZaRkZGSlBTY2RONgo1V2dkaGZJL0UxTFhmNzdqVWtINWNab0k2ZnNiTUpiNjlnSG1HRm5hcGRiOHh4WHVzWEh6cE41YVNOaDh0OGtuCnQzL0d4RmxucmtzdGJMRmc1ZjZxNHF5Vmd3SURBUUFCbzM4d2ZUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRkJ1M05rMmdWaE0yMk43TDJ0OUlYN1I0M2NsNE1COEdBMVVkSXdRWU1CYUFGTXM2V0NIMFMrTi9GWHlICi82SUlENWtpZU1DdE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2d3bkxNcjNMREFCZlB4bVhrNXcwQWRGSm8KSEQ2L0FjR0ZMQjVqVWtzSVhGejdRNFNUZU9hSms2NGRjMExjT2tYR080WWJXRTBGWUpUa3VuLys5YSt1eDA5awpLS2M3emV1aFZyQ2duNVJoUmt5M0h3TTlTYUxNa2xZeHdOa0ZreEFZeTB6WHh3b3ZKd251QnBHZkN4MGREVGVHCmhTUzEvQTUwZERSeDM1TllDMkY4K1c4bVlOMy9lVVNiSXlneXlKcitSaHplNDNmTkIzRjM3RG1nYldnaXpXK1cKRWpGOWR2RTZzempxNmt0b0IvaWUvNHpUQStZSnQ0QVY3UDJSdTFpRG5iWEtnNEtsWldUQ0JJNXBQeitmMnFXUApIOERUUlJVZ201YjhBWXBZV2M1dkl1cXhEUzhoc3paelIvZWc5Mnd3dG9keGVqTVg1bHZDUy9UQU5DalEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcnk4Q3hsZ0RqbFJaL2ZqM1JVMzVNWWwrdWpJWllaMWpMM21LTVFHY1dIYXRHTnJwCm51TlpJWWszSzZxeEtVd3ZIV0ZCL3QySVk0OFZHam9SalpsMHVCeldEd09ycjl3Y3MyWmwrNmtxKy81VGlHVFYKMk9DTXgzQ29wR2s1MERkY1hFbGFHQ3JOWWtYcXJvdlBKZDJyVDdSOTB5RjMzV1NNTkRmY2h6a0QyNk1RSlZCZwpaQ3gva2JZRDlBZzVvbjlVb1BqbDRhc2gwNXFkT0dVQXhyNWh4VEtvRmo0b3RjSEt5MDEyRjhreHVpMC94aWJ3CkZaRkZGSlBTY2RONjVXZ2RoZkkvRTFMWGY3N2pVa0g1Y1pvSTZmc2JNSmI2OWdIbUdGbmFwZGI4eHhYdXNYSHoKcE41YVNOaDh0OGtudDMvR3hGbG5ya3N0YkxGZzVmNnE0cXlWZ3dJREFRQUJBb0lCQUJhSFNTZ1FzWVJnUEtKNApuZlAvcndnNzBseEhqUlFNbFhESmhJZ0EyUVpYWExOUms3R25NeE1vL2p0VFhDMGZhdit3UGpoMGJOSEEyTW5pCnBkYzc0Tks4Z3BxenNpU1BmZkZrUGNFN1pCZThBU29OTGFNU1hZaFlhSmVjSUo4eVAySnUzSE0zTGVweGExaS8KQ2dpb2xSdE83czkwQW1JcVNBMS9FWkVpTitqS3ZRRmp1UE02R1pCVFlKUzdmN2ZHYzNIc2d6aTBTMngzajNDTwpSZGZLOGl5VExjMHV6M3dxb3puTEo5WTNLbldmaHVXbE9QS0dXUk9WbEhORzFsUHNCUjJhYXZuSy90dTJabytZCjlPYUZNRVNZN1JQVnVuRGRMcktLRjY4OW5oV1N5Nlg4RmJBYWJKa3hZNEJ2VkdRdHpLa0orbmthK3ZoNjhmU20KeWo4dVFFRUNnWUVBMzA1TmdRaG1Pcm9SMngrc0dXbHhNQWZmcERzWkM2TjR4SUl0RlFCSnk4YnJGL3AxQ2RhWQpIN2ZRT2RqNHhQMkV6YWVneUtYWXZvWkRXbnlYa2NDYXpqdEZ5aFpsaFdWU3paSU9ya3ZacDV0Yy9vOS9pTjlBCjh2WTBBYXVmMGtZUTExb2NyTE5BWGNqekk0WGN3REplakhRVjYrblBKU3dvaVh2TXUvNmQ2UGtDZ1lFQXlOVUwKaktZcFJHZDM1L0lBM2FtOXU5cVduQUp3YldiV2hQNnpxQWwvMDExK2g3Yk0vUUVlUkFmKzhwTXFVR2RPQ0w1Swo1NmdlTzZkRE9Wd0xZakg1WWZRTytjZmtyS2puTjNlTzQ2VkRSYXdpM0RZV0tWcHd4ZkdsTzdkWjMrMStFVjBzClYzWktuYjNNNStiZlFkNjY1a1ZldHRnZmtaQXVJTzgyOHJnUExWc0NnWUVBeHloODgwSGNlekFNVU5RVWw2MTAKNTVOK0lHa2MwMForcFRROHBPaFc2TW1HVHlKdlU5RHlhQWQyVE1GNFRhaVYweDFYeHR3elRPbE9GTnZlQ240dgpFeFBHRUpDZEJyWHhmYXB3TVg4d3BjMW95UmlPZERJNUtQZndOalV0RzBxbUpvc1YyK2thMVFvdDMxYTZKU2hICkx4a3htL0F4Y1VQSys2TlFXN0tnZjNFQ2dZQUtvV1JNSEp1QW1HMTdaSTd4TE1QelJwM0VRa2pMTWE5WE9OZ3YKbzlrVlNoU2hnR2FYV2RETlR4TUtxZ21LV2YyQ2J2Z3VEUE1VdTBUT3EzV2F6QVJrVC9QZSt0cTYzUEhvT0xiaQppK1Brc3pqaEtTZkJKcDFqak9mdklrUnFtdnFhVnJFN0svTEZLTC9JNHFxY3BQcUZwOVJjbjFJRWRYcExtZjN4Cm1SYU1rd0tCZ0FDUFBhQW5yUlRjOEF6OEI3RG9TSkVNeW1paWNHbmRwWWxPQXhuZlg3eFVuQStYUGg3MmZsK1QKOHNicE40UzRwTXN2cGRkUmZ5WjRqdlROTUdQVk9ZUzNxc2Y4OTBHem9VQnZ3eU5abnZJMGNZZG55QUVacitXNAo0MHJXNE5BQ1pBbjdFMVh5RUV1eFZqc2RPYk9lOHpjZVIxblo5UFJSRDdqZWNKZUVNZkNOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
`, "\t", "  "), nil
}

func TestGetKubeconfig(t *testing.T) {
	cfg := &v1beta1.Cluster{
		Metadata: &v1beta1.ClusterMetadata{
			Name: "k0s",
		},
		Spec: &cluster.Spec{
			K0s: &cluster.K0s{Config: dig.Mapping{}},
			Hosts: []*cluster.Host{
				{Role: "controller", Connection: rig.Connection{SSH: &rig.SSH{Address: "10.0.0.1", Port: 22}}},
			},
		},
	}

	origReadKubeconfig := readKubeconfig
	defer func() { readKubeconfig = origReadKubeconfig }()
	readKubeconfig = fakeReader

	p := GetKubeconfig{GenericPhase: GenericPhase{Config: cfg}}
	require.NoError(t, p.Run())
	conf, err := clientcmd.Load([]byte(cfg.Metadata.Kubeconfig))
	require.NoError(t, err)
	require.Equal(t, "https://10.0.0.1:6443", conf.Clusters["k0s"].Server)

	cfg.Spec.Hosts[0].Connection.SSH.Address = "abcd:efgh:ijkl:mnop"
	p.APIAddress = ""
	require.NoError(t, p.Run())
	conf, err = clientcmd.Load([]byte(cfg.Metadata.Kubeconfig))
	require.NoError(t, err)
	require.Equal(t, "https://[abcd:efgh:ijkl:mnop]:6443", conf.Clusters["k0s"].Server)
}
